Name,Question,Answer
PRONOM,"<p class=""large"" style=""text-align: center;""><span class=""large""><strong>PRONOM</strong></span></p>","<ul>	<li>PRONOM is a digital preservation technical registry. It is maintained by The National Archives, UK, though it’s core architecture is little changed since 2004.</li>	<li>PRONOM’s use in the community is to be a centralised service for file format signatures.</li>	<li>For every file format that can be identified through the tools that use PRONOM’s signatures, a unique identifier is also given to the user.</li></ul>"
PUID,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">PUID</span></strong></p>","<p class=""medium"" style=""text-align: center;"">PRONOM Unique Identifier (PUID) which are assigned to all formats in the PRONOM registry. There are two primary types, fmt and x-fmt. The latter is the result of a historical error when x-fmt identifiers were made available to the public. A subsequent decision to maintain x-fmt was made in favour of continuity as a standard. There is no longer a semantic difference between identifier types – that is the x- is no longer experimental, it is equivalent to the other type.</p>"
PRONOM web services,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">PRONOM web services</span></strong></p>","<p class=""medium"" style=""text-align: center;"">PRONOM delivers signature files to tools via web services. DROID for example will first use a web-service to check for new signatures. If they exist it will then communicate with a second web service to download those signatures in the form of a 'signature file'. A second type of signature file, Container Signatures, are downloaded via more traditional web based techniques utilizing a web-page’s Last-modified date, to seek new data.</p>"
PRONOM XML,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">PRONOM XML</span></strong></p>",<p>PRONOM can be accessed via XML making it possible to download and remix. The links look like:</p><ul>	<li>http://www.nationalarchives.gov.uk/PRONOM/fmt/{no}</li>	<li>http://www.nationalarchives.gov.uk/PRONOM/x-fmt/{no}</li></ul>
DROID Signature File,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">DROID Signature File</span></strong></p>","<ul>	<li>A DROID signature file is an XML file that contains a snapshot of PRONOM in its current state.</li>	<li>Split into two, or three sections (for container signatures), the signature file’s two main components are a list of file formats and metadata, e.g. format MIMEType, and then a mapping to a list of signatures.</li>	<li>A container signature file contains a third section of ‘trigger PUIDs’ that is, PUIDs that trigger container identification when a match is found.</li></ul><p> </p>"
PRONOM Release,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">PRONOM Release</span></strong></p>","<p class=""medium"" style=""text-align: center;"">A PRONOM release happens when a publishing job is run by The National Archives, UK. Importantly, the draft information in the database is published onto the web, and a signature file is created via database stored procedure and uploaded to a location where it can be accessed via web service.</p>"
PRONOM Release Notes,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">PRONOM Release Notes</span></strong></p>","<p>The PRONOM release notes are released in XML form and are available from the PRONOM index page on the web. Each release it summaries in terms of:</p><ul>	<li>New Records: New records for file formats that now have PUIDs</li>	<li>Updated records: Format records in PRONOM that have had their information updated in some way, including signature changes</li>	<li>New Signatures: File formats that now have signatures associated with them and can be identified via PRONOM</li></ul>"
pronom@nationalarchives.gsi.gov.uk,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">pronom@nationalarchives.gsi.gov.uk</span></strong></p>","<p class=""medium"" style=""text-align: center;"">The email address to send format requests to at The National Archives, UK.</p>"
DROID-list Google Group,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">DROID-list Google Group</span></strong></p>","<p class=""medium"" style=""text-align: center;"">An open community that is a good first place to start for discussing new file format signatures for PRONOM. Being open, folks are invited to contribute to other’s identification issues. Signatures can be shared and the workload in fixing them shared too. PRONOM development is aided when there is as much information as possible about a file format and its potential signature. This work would all have to be done by their developers otherwise.</p>"
DROID,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">DROID</span></strong></p>","<p class=""medium"" style=""text-align: center;"">DROID was the first client tool to make use of PRONOM signatures. The tool can be pointed at a directory, or directories of files to recurse. The files are then matched against the signatures in the signature file. DROID will return a PUID <strong><em>only</em></strong> for those that do match. For <strong><em>all</em></strong> files DROID outputs other metadata including last-modified date, and checksum if selected.</p>"
Fido,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Fido</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Fido was the second client tool to make use of a subset of the PRONOM signatures. Fido was created in Python and utilized traditional regular expressions to match file formats with signatures. This meant converting the PRONOM signatures into a format that could be understood by a standard regular expression matching engine. Fido is used in Archivematica and is still maintained as part of the Open Preservation Foundations stewardship.</p>"
Siegfried,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Siegfried</span></strong></p>","<p>Siegfried is a more current implementation of a DROID-like tool and utilizes all of the signature information available to DROID. Siegfried uses a different matching algorithm. It will return equivalent metadata. Siegfried has a number of strengths.</p><ul>	<li>It is the first to use more sources of file format signatures, including a type of signature from BSD FreeDesktop, and a set of signatures from the Library of Congress</li>	<li>Siegfried is primarily command line based making it easier to integrate with workflows</li>	<li>Siegfried is also open source like DROID</li></ul>"
Brunnhilde,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Brunnhilde</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Brunnhilde is a reporting companion tool for Siegfried created by Tim Walsh. Brunnhilde is part of BitCurator implementations and also integrates reports from sources such as ClamAV virus checker.</p>"
Roy,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Roy</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Roy is a utility created alongside Siegfried that allows users to customize signature files and Siegfried’s capability with those signature files. For example, it is possible to create custom offsets to match against, or to limit the number of formats with signatures in the signature file, e.g. only image formats for digitization workflows.</p>"
Offset,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Offset</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Offsets are important to the functionality of a signature, that is, where in a file will certain byte patterns (signature patterns) are expected to be found. DROID and Siegfried both offer customisations which limit the size of an offset. These customisations can be used to speed up format identification e.g. by scanning less data a scan can finish quicker, but this has its trade-offs.</p>"
False Positive,"<p class=""large"" style=""text-align: center;""><span class=""large""><strong>False Positive</strong></span></p>","<p class=""medium"" style=""text-align: center;"">A false positive occurs when a format is matched incorrectly, or imprecisely in DROID or Siegfried. This can happen when the amount of scanning done by the tool is limited and the format has some similarities to another, e.g. PDF/A files require more bytes to be scanned than regular PDF. A false positive can be hard to spot because a match, is after all, a match. False positives can impact workflow routing and future preservation planning.</p>"
BOF,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">BOF</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Beginning of File (BOF). A file will often have a magic signature in its very first few bytes and so we’ll often be looking at beginning of file sequences.</p>"
EOF,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">EOF</span></strong></p>","<p class=""medium"" style=""text-align: center;"">End of File (EOF). A good signature will also be anchored to another piece of data in the file, this will often be the very end, e.g. PDF provides an end of file sequence that can be used. Programs, while not very efficient at reading every byte in a file, can easily look at the head and tail of an object within a certain threshold of bytes.</p>"
VAR,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">VAR</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Variable sequence (VAR). Some signatures have a moveable sequence specified. These sequences can be anywhere in the file and often require the tool to scan every byte which is slow. A key optimization of file format signatures is trying to remove variable sequences to replace them with fixed byte sequences (BOF or EOF) with larger ranges in which to find them.</p>"
Prioritization,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Prioritization</span></strong></p>","<p class=""medium"" style=""text-align: center;"">The DROID signature file contains more semantics than the signatures alone. To avoid two PUIDs being returned for a single file as much as possible, prioritization of signatures has to take place, that is, if a signature matches with higher priority over another, then that is returned in favour of the other. When looking at the records of signatures in PRONOM prioritizations are listed on the front page of the record, not the signature page. All this information is included in the signature file, so that is how DROID finds it all in one place.</p>"
Standard Signatures,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Standard Signatures</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Standard signatures are signatures which look at the byte stream as read by the program, that is, without uncompressing it, or manipulating it in any other way first. What you see is what you get.</p>"
Container Signatures,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Container Signatures</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Container signatures require the tool to first uncompress the file. Container signatures only exist for OLE2 type files (Microsoft family, plus a few others), and ZIP type files (Microsoft family, Open Office, plus a few others). First a trigger is discovered, and that trigger maps to a set of rules for identification in the container signature which may include the specification of files or folders that must exist, and optionally magic number byte sequences inside specific files.</p>"
Inspect Container File Contents,"<p class=""large"" style=""text-align: center;""><span class=""large""><strong>Inspect Container File Contents</strong></span></p>","<p class=""medium"" style=""text-align: center;"">Different from container ‘identification’ if DROID or Siegfried encounter a file that is legitimately a container or ‘archive’ file format, such as ZIP or TAR (Tape Archive File), then setting 'Inspect Container File Contents' can make the tool look inside the file and return PUIDs for the container's contents as well.</p>"
Scan Web Archives,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Scan Web Archives</span></strong></p>","<p class=""medium"" style=""text-align: center;"">WARC (Web Archive) files are complex and can contain any number of any other file format. DROID and Siegfried can scan the contents of a WARC file returning PUIDs for every matching file inside.</p>"
itforarchivists.com,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">itforarchivists.com</span></strong></p>","<p class=""medium"" style=""text-align: center;"">A companion website for Siegfried that has drag and drop functionality for identifying individual files. Itforarchivists is pretty cool and retro and a great resource for introducing folks to the concept of format identification.</p>"
Signature Development Utility,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Signature Development Utility</span></strong></p>","<p class=""medium"" style=""text-align: center;"">A website (<a href=""http://www.nationalarchives.gov.uk/pronom/sigdev/index.htm"">http://www.nationalarchives.gov.uk/pronom/sigdev/index.htm</a>) that enables folks outside of TNA to create individual signature files for testing. A signature developed and tested in anticipation of a submission to PRONOM may make the turnaround to it being published as part of PRONOM much quicker.</p>"
DROID Checksums,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">DROID's Checksums</span></strong></p>","<p class=""medium"" style=""text-align: center;"">DROID can calculate MD5, SHA1, SHA256</p>"
Siegfried Checksums,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Siegfried's Checksums</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Siegfried can calculate CRC32, MD5, SHA1, SHA256</p>"
DROID exports,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">DROID's Exports</span></strong></p>","<p class=""medium"" style=""text-align: center;"">DROID results can be exported in a comma separated values table (CSV). It is also possible to save the results of a scan in an Apache Derby Database.</p>"
Siegfried exports,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Siegfried's Exports</span></strong></p>","<p class=""medium"" style=""text-align: center;"">Siegfried results can be exported in YAML (YAML Ain't Markup Language), and CSV (Comma Separated Values table)</p>"
Skeleton File,"<p class=""large"" style=""text-align: center;""><strong><span class=""large"">Skeleton File</span></strong></p>","<p class=""medium"" style=""text-align: center;"">A skeleton file is a mechanism for testing DROID or Siegfried when a file cannot be shared. A corpus of skeleton files can be created when other examples do not exist. Skeleton files contain only the bytes relevant to a potential signature match, and nonsense data in between to pad the format. The Skeleton Test Suite on GitHub is a good example of these files that enables developers to test for false positives and multiple matches, amongst other things.</p>"
